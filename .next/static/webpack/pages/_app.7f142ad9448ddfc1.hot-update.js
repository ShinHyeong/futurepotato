"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./reducers/mainpage.js":
/*!******************************!*\
  !*** ./reducers/mainpage.js ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initialMainState\": function() { return /* binding */ initialMainState; },\n/* harmony export */   \"mainPageRequestAction\": function() { return /* binding */ mainPageRequestAction; }\n/* harmony export */ });\n/* harmony import */ var immer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! immer */ \"./node_modules/immer/dist/immer.esm.mjs\");\n\nconst initialMainState = {\n    clearUpload: false,\n    storyList: [],\n    postList: [],\n    limit: null,\n    prePost: null,\n    nextPost: null,\n    newImage: [],\n    isImage: false,\n    detailPage: null,\n    alarmData: []\n};\nconst dummyData = {\n    \"storyList\": [\n        {\n            \"name\": \"user1\",\n            \"profileImage\": \"/cover 1.png\"\n        },\n        {\n            \"name\": \"user1\",\n            \"profileImage\": \"/cover 2.png\"\n        },\n        {\n            \"name\": \"user1\",\n            \"profileImage\": \"/cover 3.png\"\n        },\n        {\n            \"name\": \"user1\",\n            \"profileImage\": \"/cover 3.png\"\n        },\n        {\n            \"name\": \"user1\",\n            \"profileImage\": \"/cover 3.png\"\n        },\n        {\n            \"name\": \"user1\",\n            \"profileImage\": \"/cover 3.png\"\n        },\n        {\n            \"name\": \"user1\",\n            \"profileImage\": \"/cover 3.png\"\n        },\n        {\n            \"name\": \"user1\",\n            \"profileImage\": \"/cover 3.png\"\n        },\n        {\n            \"name\": \"user1\",\n            \"profileImage\": \"/cover 3.png\"\n        },\n        {\n            \"name\": \"user1\",\n            \"profileImage\": \"/cover 3.png\"\n        }\n    ],\n    \"postList\": [\n        {\n            id: 1,\n            name: \"user1\",\n            \"content\": \"게시글1\",\n            \"createdDate\": \"2023-01-01T12:11:00\",\n            \"modifiedDate\": \"2023-01-01T13:11:00\",\n            likeCount: 12,\n            likesCheck: true,\n            \"commentCount\": 110,\n            \"profileImage\": \"/cover 1.png\",\n            \"commentList\": [\n                {\n                    \"commentWriter\": \"user2\",\n                    \"Image\": \"/cover 3.png\",\n                    \"comment\": \"게시글 댓글1\",\n                    \"likeCount\": 100,\n                    \"commentId\": 1,\n                    \"replyList\": [\n                        {\n                            \"replyWriter\": \"user1\",\n                            \"reply\": \"reply1\",\n                            \"createdDt\": \"\"\n                        },\n                        {\n                            \"replyWriter\": \"user2\",\n                            \"reply\": \"reply2\",\n                            \"image\": \"dsfj.png\",\n                            \"createdDt\": \"\"\n                        }\n                    ]\n                }\n            ],\n            \"imageList\": [\n                {\n                    \"image\": \"./cover 1.png\"\n                },\n                {\n                    \"image\": \"./cover 2.png\"\n                },\n                {\n                    \"image\": \"./cover 3.png\"\n                },\n                {\n                    \"image\": \"./cover 4.png\"\n                }\n            ],\n            \"isMultyImage\": false\n        }\n    ],\n    \"limit\": 10,\n    \"prePost\": 0,\n    \"nextPost\": true\n};\nconst dummyAlarm = [\n    {\n        \"id\": 9,\n        \"sender\": \"user5\",\n        \"receiver\": \"user6\",\n        \"place\": \"user6's post\",\n        \"action\": \"댓글을 달았습니다.\",\n        \"actionMessage\": \"user5님이 user6's post에 댓글을 달았습니다.\"\n    },\n    {\n        \"id\": 10,\n        \"sender\": \"user8\",\n        \"receiver\": \"user6\",\n        \"place\": \"user6's post\",\n        \"action\": \"댓글을 달았습니다.\",\n        \"actionMessage\": \"user8님이 user6's post에 댓글을 달았습니다.\"\n    },\n    {\n        \"id\": 12,\n        \"sender\": \"user7\",\n        \"receiver\": \"user6\",\n        \"place\": \" ccmet\",\n        \"action\": \"대댓글을 달았습니다.\",\n        \"actionMessage\": \"user7님이  ccmet에 대댓글을 달았습니다.\"\n    }\n];\nconst dummyPost = {\n    id: 3,\n    name: \"yusung\",\n    \"content\": \"게시글4\",\n    \"profileImage\": \"/cover 8.png\",\n    \"createdDate\": \"2023-01-01T12:11:00\",\n    \"modifiedDate\": \"2023-01-01T13:11:00\",\n    likeCount: 0,\n    likesCheck: false,\n    \"commentCount\": 0,\n    \"commentList\": [],\n    \"imageList\": [\n        {\n            \"image\": \"./cover 4.png\"\n        },\n        {\n            \"image\": \"./cover 3.png\"\n        },\n        {\n            \"image\": \"./cover 2.png\"\n        }\n    ],\n    \"isMultyImage\": false\n};\nconst mainPageRequestAction = ()=>({\n        type: \"MAIN_PAGE_REQUEST\"\n    });\nconst reducer = function() {\n    let state = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : initialMainState, action = arguments.length > 1 ? arguments[1] : void 0;\n    return (0,immer__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(state, (draft)=>{\n        switch(action.type){\n            case \"MAIN_PAGE_REQUEST\":\n                console.log(\"이게뭘까요?\");\n                break;\n            case \"MAIN_PAGE_SUCCESS\":\n                draft.storyList = draft.storyList.concat(dummyData.storyList);\n                draft.postList = draft.postList.concat(dummyData.postList); //dummyData.postList;//draft.postList.concat(dummyData.postList);\n                draft.limit = dummyData.limit;\n                draft.prePost = dummyData.prePost;\n                draft.nextPost = dummyData.nextPost;\n                break;\n            case \"MAIN_PAGE_FAIRLUE\":\n                break;\n            case \"POST_INFO_REQUEST\":\n                draft.detailPage = {};\n                break;\n            case \"POST_INFO_SUCCESS\":\n                draft.postList = action.data;\n                break;\n            case \"POST_INFO_FAILURE\":\n                break;\n            case \"ADD_POST_REQUEST\":\n                break;\n            case \"ADD_POST_SUCCESS\":\n                {\n                    draft.postList.unshift(dummyPost);\n                    draft.clearUpload = true;\n                    draft.newImage = [];\n                    break;\n                }\n            case \"ADD_POST_FAILURE\":\n                draft.clearUpload = true;\n                draft.newImage = [];\n                break;\n            case \"MOD_POST_REQUEST\":\n                break;\n            case \"MOD_POST_SUCCESS\":\n                {\n                    draft.postList.find((v)=>v.name == action.dataId ? v.content = action.data : v.content);\n                    break;\n                }\n            case \"MOD_POST_FAILURE\":\n                break;\n            case \"REMOVE_POST_REQUEST\":\n                console.log(\"포스트를 삭제합니다\");\n                break;\n            case \"REMOVE_POST_SUCCESS\":\n                {\n                    console.log(action.data);\n                    const newPostList = draft.postList.filter((v)=>v.id != action.data);\n                    draft.postList = newPostList;\n                    break;\n                }\n            case \"REMOVE_POST_FAILURE\":\n                break;\n            case \"ADD_COMMENT_REQUEST\":\n                {\n                    console.log(draft);\n                    const post = draft.postList.find((v)=>v.id === action.dataw);\n                    console.log(post);\n                    post.commentList.push({\n                        \"commentWriter\": action.datame.username,\n                        \"Image\": action.datame.profileimage,\n                        \"comment\": action.data,\n                        \"likeCount\": 0,\n                        \"replyList\": [],\n                        commentId: 0\n                    });\n                    break;\n                }\n            case \"ADD_COMMENT_SUCCESS\":\n                break;\n            case \"ADD_COMMENT_FAILURE\":\n                break;\n            case \"DELETE_COMMENT_REQUEST\":\n                break;\n            case \"DELETE_COMMENT_SUCCESS\":\n                {\n                    const post = draft.postList.find((v)=>v.id == action.data.postId);\n                    const index = draft.postList.findIndex((v)=>v.id == action.data.postId);\n                    post.commentList.filter((v)=>v.commentId != action.data.commentId);\n                    draft.postList[index] = post;\n                    break;\n                }\n            case \"DELETE_COMMENT_FAILURE\":\n                break;\n            case \"IMAGE_UPLOAD_REQUEST\":\n                {\n                    draft.newImage.push(action.data);\n                    draft.isImage = true;\n                    break;\n                }\n            case \"ADD_REPLY_REQUEST\":\n                break;\n            case \"ADD_REPLY_SUCCESS\":\n                break;\n            case \"ADD_REPLY_FAILURE\":\n                break;\n            case \"DELETE_REPLY_REQUEST\":\n                break;\n            case \"DELETE_REPLY_SUCCESS\":\n                break;\n            case \"DELETE_REPLY_FAILURE\":\n                break;\n            case \"LOAD_DETAIL_REQUEST\":\n                break;\n            case \"LOAD_DETAIL_SUCCESS\":\n                break;\n            case \"LOAD_DETAIL_FAILURE\":\n                break;\n            case \"ALARM_REQUEST\":\n                break;\n            case \"ALARM_REQUEST_SUCCESS\":\n                break;\n            case \"ALARM_REQUEST_FAILURE\":\n                break;\n            default:\n                break;\n        }\n    });\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./reducers/mainpage.js\n"));

/***/ })

});